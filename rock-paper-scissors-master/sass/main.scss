/* Partials */
@use 'normalize';
@use 'variables';
@use 'base';

/* components */
@use 'components/pointsCounter';
@use 'components/buttonPlay';
@use 'components/button';
@use 'components/modalRules';

/* App container */
.app-container {
  display: grid;
  grid-template-rows: 2fr 4fr 1fr;
  justify-items: center;
  align-items: center;
  height: 100%;
  width: 100%;
  padding: 0 40px;
}

/* Header container */
.header-container {
  display: flex;
  justify-content: space-between;
  height: auto;
  width: 60%;
  padding: 20px;
  border: 2px solid variables.$headerOutline;
  border-radius: 12px;
}

/* Game buttons container */
.game-buttons-container {
  display: grid;
  justify-items: center;
  align-items: center;
  height: 100%;
  width: 100%;

  .buttons {
    position: relative;
    top: 30px;
    height: 278px;
    width: 313px;
    background-image: url(../images/bg-triangle.svg);
    background-repeat: no-repeat;
    background-position: center;
    transform: scale(1.1);
  }
}

/* Btn rules conatiner */
.btn-rules-conatiner {
  justify-self: end;
}

/* Modal rules container */
.modal-rules-container {
  position: absolute;
  visibility: hidden;
  display: grid;
  justify-items: center;
  align-items: center;
  height: 1000%;
  width: 1000%;
  background-color: hsla(0, 0%, 0%, 0.6);
  z-index: 500;

}

/* temporary styles */
.buttons-container-temp-styles {
  display: grid;
  align-items: center;
  justify-items: center;
  grid-template-columns: 1fr auto 1fr;
  grid-template-rows: 1fr 6fr;
  height: 100%;
  width: 100%;
}

.txt-option-1,
.txt-option-2 {
  align-self: end;
  grid-area: 1/1/2/2;
  font-size: 25px;
  text-transform: uppercase;
  color: variables.$whiteBackground;
}
.txt-option-2 {
  grid-area: 1/3/2/4;
}

.play-again-container {
  display: grid;
  place-items: center;
  gap: 15px;
  grid-area: 1/2/3/3;
}

.txt-result {
  font-size: 50px;
  text-transform: uppercase;
  color: variables.$whiteBackground;
}

.btn-play-again:hover {
  color: variables.$rockColor;
  background-color: variables.$whiteBackground;
}

.hidden {
  display: none;
}

/* Desing responsive */
/* Tablet */
@media screen and (max-width: 768px) {
  .header-container {
    width: 100%;
  }

  .button-play-temp-style {
    transform: scale(1.1);
  }
}

/* Mobile */
@media screen and (max-width: 390px) {

  .app-container {
    padding: 0 4px;
  }

  .header-container {
    height: 50%;
    width: 90%;

    .points-counters-container {
      width: 30%;
      height: auto;

      .title {
        font-size: 12px;
      }

      .points {
        font-size: 40px;
      }
    }
  }

  .game-buttons-container {
    position: relative;
    top: -50px;

    .buttons {
      transform: scale(0.8);
    }

    .paper {
      left: 187px;
    }
  }

  .buttons-container-temp-styles {
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 3fr auto 2fr;
    height: 100%;
    width: 100%;
  }

  .button-play-temp-style {
    transform: scale(0.8);
  }

  .txt-option-1,
  .txt-option-2 {
    align-self: end;
    grid-area: 2/1/3/2;
    font-size: 20px;
  }
  .txt-option-2 {
    grid-area: 2/2/3/3;
  }

  .play-again-container {
    grid-area: 3/1/4/3;
    transform: scale(1.4);
  }

  .option-player {
    grid-area: 1/1/2/2;
  }

  .btn-play-again {
    background-color: variables.$whiteBackground;
    color: variables.$darkText;
  }

  .btn-rules-conatiner {
    position: relative;
    justify-self: center;
    z-index: 100;
  }


  /* Modal rules container */
  .modal-rules-container {
    position: absolute;
    top: -900px;
    display: grid;
    height: 100vh;
    width: 100vw;
    transition: 3s;

    .modal-rules {
      grid-template-columns: 1fr;
      grid-template-rows: 1fr 2fr 1fr;
      place-items: center;
      height: 100%;
      width: 100%;
      border-radius: 0;

      h2 {
        justify-self: center;
      }

      .icon-close {
        grid-area: 3/1/4/2;
      }
    }
  }
}

.open-modal-desktop {
  visibility: visible;
}

.open-modal-mobile {
  top: 0px;
  visibility: visible;
}

.modal-rules-animation-desktop {
  transform: rotate3d(1, 1, 1, 360deg);
  transition: 3s;
}
